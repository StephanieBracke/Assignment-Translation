unit Unit1;

interface

uses
  System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants,
  FMX.Types, FMX.Controls, FMX.Forms, FMX.Graphics, FMX.Dialogs,
  FMX.TMSFNCCustomComponent, FMX.TMSFNCCloudBase, FMX.TMSFNCCloudTranslation,
  FMX.StdCtrls, FMX.ScrollBox, FMX.Memo, FMX.Layouts, FMX.ListBox,
  FMX.Controls.Presentation, FMX.TMSFNCTypes, FMX.TMSFNCUtils,
  FMX.TMSFNCGraphics, FMX.TMSFNCGraphicsTypes, FMX.TMSFNCWXSpeechSynthesis,
  FMX.TMSFNCCustomControl, FMX.TMSFNCWebBrowser, FMX.TMSFNCCustomWEBControl,
  FMX.TMSFNCCustomWEBComponent, FMX.TMSFNCWXSpeechToText, FMX.Edit;

type
  TForm1 = class(TForm)
    TMSFNCCloudTranslation1: TTMSFNCCloudTranslation;
    btnGetLanguages: TButton;
    lbxLanguages: TListBox;
    Label5: TLabel;
    btnTranslate: TButton;
    Memo1: TMemo;
    Memo2: TMemo;
    btnTranslateWords: TButton;
    lblTypeOwnWords: TEdit;
    Edit4: TEdit;
    btnDetect: TButton;
    Edit5: TEdit;
    Label6: TLabel;
    procedure Memo1Click(Sender: TObject);
    procedure btnTranslateClick(Sender: TObject);
    procedure btnGetLanguagesClick(Sender: TObject);
    procedure btnTranslateWordsClick(Sender: TObject);
    procedure btnDetectClick(Sender: TObject);
    procedure TMSFNCCloudTranslation1GetSupportedLanguages(Sender: TObject;
      const ALanguages: TStringList;
      const ARequestResult: TTMSFNCCloudBaseRequestResult);
  private
    { Private declarations }
    FTranslationLanguage: String;
  public
    { Public declarations }
  end;

var
  Form1: TForm1;

implementation

{$R *.fmx}

procedure TForm1.btnDetectClick(Sender: TObject);
begin
  TMSFNCCloudTranslation1.Detect(Edit5.Text, DoDetectEdit);
end;

procedure TForm1.btnGetLanguagesClick(Sender: TObject);
begin
  TMSFNCCloudTranslation1.GetSupportedLanguages;
end;

procedure TForm1.btnTranslateClick(Sender: TObject);
var
  sl: TStringList;
begin
  Memo2.Lines.Clear;
  sl := TStringList.Create;
  try
    sl.Assign(Memo1.Lines);
    TMSFNCCloudTranslation1.Translate(sl, FTranslationLanguage, DoTranslateMemo);
  finally
    sl.Free;
  end;
end;

procedure TForm1.btnTranslateWordsClick(Sender: TObject);
begin
  TMSFNCCloudTranslation1.Translate(lblTypeOwnWords.Text, FTranslationLanguage, DoTranslateEdit);
end;

procedure TForm1.TMSFNCCloudTranslation1GetSupportedLanguages(Sender: TObject;
  const ALanguages: TStringList;
  const ARequestResult: TTMSFNCCloudBaseRequestResult);
begin
  lbxLanguages.Items.Assign(ALanguages);
end;

end.
